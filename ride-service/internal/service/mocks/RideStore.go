// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/golang_falcon_task/ride-service/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// RideStore is an autogenerated mock type for the RideStore type
type RideStore struct {
	mock.Mock
}

// UpdateRide provides a mock function with given fields: ctx, rideID, ride
func (_m *RideStore) UpdateRide(ctx context.Context, rideID int32, ride *model.Ride) error {
	ret := _m.Called(ctx, rideID, ride)

	if len(ret) == 0 {
		panic("no return value specified for UpdateRide")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int32, *model.Ride) error); ok {
		r0 = rf(ctx, rideID, ride)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRideStore creates a new instance of RideStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRideStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *RideStore {
	mock := &RideStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
